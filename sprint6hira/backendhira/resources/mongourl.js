"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getUrls = void 0;
const { MongoClient } = require('mongodb');
async function connection() {
    const uri = "mongodb+srv://hiraaziz:hiraaziz@crud.kxkc9.mongodb.net/myFirstDatabase?retryWrites=true&w=majority";
    let client = new MongoClient(uri, { useNewUrlParser: true, useUnifiedTopology: true });
    const clientPromise = client.connect();
    return clientPromise;
}
async function getUrls() {
    const client = await connection();
    const result = await client.db('webhealth').collection('urls').find().toArray(); // query to get all documents from database
    console.log(result);
    client.close();
    return result;
}
exports.getUrls = getUrls;
// Handler
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZ291cmwuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJtb25nb3VybC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSxNQUFNLEVBQUUsV0FBVyxFQUFFLEdBQUcsT0FBTyxDQUFDLFNBQVMsQ0FBQyxDQUFDO0FBRzNDLEtBQUssVUFBVSxVQUFVO0lBQ1QsTUFBTSxHQUFHLEdBQUcsb0dBQW9HLENBQUM7SUFDakgsSUFBSSxNQUFNLEdBQUcsSUFBSSxXQUFXLENBQUMsR0FBRyxFQUFDLEVBQUUsZUFBZSxFQUFFLElBQUksRUFBRSxrQkFBa0IsRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDO0lBQ3RGLE1BQU0sYUFBYSxHQUFHLE1BQU0sQ0FBQyxPQUFPLEVBQUUsQ0FBQztJQUN2QyxPQUFPLGFBQWEsQ0FBQTtBQUNwQyxDQUFDO0FBRU0sS0FBSyxVQUFVLE9BQU87SUFFekIsTUFBTSxNQUFNLEdBQUcsTUFBTSxVQUFVLEVBQUUsQ0FBQTtJQUNqQyxNQUFNLE1BQU0sR0FBRyxNQUFNLE1BQU0sQ0FBQyxFQUFFLENBQUMsV0FBVyxDQUFDLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxDQUFDLElBQUksRUFBRSxDQUFDLE9BQU8sRUFBRSxDQUFDLENBQW9DLDJDQUEyQztJQUMvSixPQUFPLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFBO0lBQ25CLE1BQU0sQ0FBQyxLQUFLLEVBQUUsQ0FBQztJQUNmLE9BQU8sTUFBTSxDQUFDO0FBRWxCLENBQUM7QUFSRCwwQkFRQztBQUNELFVBQVUiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IE1vbmdvQ2xpZW50IH0gPSByZXF1aXJlKCdtb25nb2RiJyk7XHJcblxyXG5cclxuYXN5bmMgZnVuY3Rpb24gY29ubmVjdGlvbigpe1xyXG4gICAgICAgICAgICAgICAgY29uc3QgdXJpID0gXCJtb25nb2RiK3NydjovL2hpcmFheml6OmhpcmFheml6QGNydWQua3hrYzkubW9uZ29kYi5uZXQvbXlGaXJzdERhdGFiYXNlP3JldHJ5V3JpdGVzPXRydWUmdz1tYWpvcml0eVwiO1xyXG4gICAgICAgICAgICAgICAgbGV0IGNsaWVudCA9IG5ldyBNb25nb0NsaWVudCh1cmkseyB1c2VOZXdVcmxQYXJzZXI6IHRydWUsIHVzZVVuaWZpZWRUb3BvbG9neTogdHJ1ZSB9KTtcclxuICAgICAgICAgICAgICAgIGNvbnN0IGNsaWVudFByb21pc2UgPSBjbGllbnQuY29ubmVjdCgpO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGNsaWVudFByb21pc2VcclxufVxyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldFVybHMoKXtcclxuICAgICAgICBcclxuICAgIGNvbnN0IGNsaWVudCA9IGF3YWl0IGNvbm5lY3Rpb24oKVxyXG4gICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgY2xpZW50LmRiKCd3ZWJoZWFsdGgnKS5jb2xsZWN0aW9uKCd1cmxzJykuZmluZCgpLnRvQXJyYXkoKTsgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBxdWVyeSB0byBnZXQgYWxsIGRvY3VtZW50cyBmcm9tIGRhdGFiYXNlXHJcbiAgICBjb25zb2xlLmxvZyhyZXN1bHQpXHJcbiAgICBjbGllbnQuY2xvc2UoKTtcclxuICAgIHJldHVybiByZXN1bHQ7XHJcblxyXG59XHJcbi8vIEhhbmRsZXJcclxuIl19